const seeder = require("mongoose-seed");
const mongoose = require("mongoose");

const date = (num) => {
  var d = new Date();
  return d.setDate(d.getDate() - num);
};

const data = [
  {
    model: "Product",
    documents: [
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Watch",
        quantity: 100,
        originalPrice: 300,
        sellingPrice: 350,
        dateOfPurchase: date(2),
        store: "609bb9e44b802c1c1ccf5549",
        createdAt: date(1),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Head Phones",
        quantity: 100,
        originalPrice: 3000,
        sellingPrice: 3500,
        dateOfPurchase: date(5),
        store: "609bb9e44b802c1c1ccf5549",
        createdAt: date(3),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Sandals",
        quantity: 100,
        originalPrice: 300,
        sellingPrice: 350,
        dateOfPurchase: date(5),
        store: "609bb9e44b802c1c1ccf5549",
        createdAt: date(3),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Milk (cowbell)",
        quantity: 100,
        originalPrice: 300,
        sellingPrice: 350,
        dateOfPurchase: date(2),
        store: "609bb9e44b802c1c1ccf5549",
        createdAt: date(1),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Milo",
        quantity: 100,
        originalPrice: 300,
        sellingPrice: 350,
        dateOfPurchase: date(2),
        store: "609bb9e44b802c1c1ccf5549",
        createdAt: date(1),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Plates",
        quantity: 100,
        originalPrice: 30,
        sellingPrice: 10,
        dateOfPurchase: date(10),
        store: "609bb9e44b802c1c1ccf5549",
        createdAt: date(10),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Broom",
        quantity: 100,
        originalPrice: 100,
        sellingPrice: 150,
        dateOfPurchase: date(10),
        store: "609bb9e44b802c1c1ccf5549",
        createdAt: date(10),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Spagetti",
        quantity: 100,
        originalPrice: 200,
        sellingPrice: 250,
        dateOfPurchase: date(10),
        store: "609bb9e44b802c1c1ccf5549",
        createdAt: date(10),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Rice",
        quantity: 100,
        originalPrice: 1000,
        sellingPrice: 1500,
        dateOfPurchase: date(9),
        store: "609bb9e44b802c1c1ccf5549",
        createdAt: date(9),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Beans",
        quantity: 100,
        originalPrice: 300,
        sellingPrice: 350,
        dateOfPurchase: date(10),
        store: "609bb9e44b802c1c1ccf5549",
        createdAt: date(10),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Indomie",
        quantity: 100,
        originalPrice: 300,
        sellingPrice: 350,
        dateOfPurchase: date(11),
        store: "609bb9e44b802c1c1ccf5549",
        createdAt: date(11),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Television",
        quantity: 100,
        originalPrice: 30000,
        sellingPrice: 35000,
        dateOfPurchase: date(11),
        store: "609bb9e44b802c1c1ccf5549",
        createdAt: date(11),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Boom Box",
        quantity: 100,
        originalPrice: 300,
        sellingPrice: 350,
        dateOfPurchase: date(10),
        store: "609bb9e44b802c1c1ccf5549",
        createdAt: date(10),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Bed frame",
        quantity: 100,
        originalPrice: 3000,
        sellingPrice: 3500,
        dateOfPurchase: date(10),
        store: "609bb9e44b802c1c1ccf5549",
        createdAt: date(10),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Note Book",
        quantity: 100,
        originalPrice: 300,
        sellingPrice: 350,
        dateOfPurchase: date(2),
        store: "609bb9e44b802c1c1ccf5549",
        createdAt: date(1),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Garri",
        quantity: 100,
        originalPrice: 300,
        sellingPrice: 350,
        dateOfPurchase: date(8),
        store: "609bb9e44b802c1c1ccf5549",
        createdAt: date(8),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Hammar",
        quantity: 100,
        originalPrice: 300,
        sellingPrice: 350,
        dateOfPurchase: date(8),
        store: "609bbd1616e3b10aa8aec7d4",
        createdAt: date(8),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Nails",
        quantity: 100,
        originalPrice: 300,
        sellingPrice: 350,
        dateOfPurchase: date(8),
        store: "609bbd1616e3b10aa8aec7d4",
        createdAt: date(8),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Watch",
        quantity: 100,
        originalPrice: 300,
        sellingPrice: 350,
        dateOfPurchase: date(2),
        store: "609bbd1616e3b10aa8aec7d4",
        createdAt: date(1),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Head Phones",
        quantity: 100,
        originalPrice: 3000,
        sellingPrice: 3500,
        dateOfPurchase: date(5),
        store: "609bbd1616e3b10aa8aec7d4",
        createdAt: date(3),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Sandals",
        quantity: 100,
        originalPrice: 300,
        sellingPrice: 350,
        dateOfPurchase: date(5),
        store: "609bbd1616e3b10aa8aec7d4",
        createdAt: date(3),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Milk (cowbell)",
        quantity: 100,
        originalPrice: 300,
        sellingPrice: 350,
        dateOfPurchase: date(2),
        store: "609bbd1616e3b10aa8aec7d4",
        createdAt: date(1),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Milo",
        quantity: 100,
        originalPrice: 300,
        sellingPrice: 350,
        dateOfPurchase: date(2),
        store: "609bbd1616e3b10aa8aec7d4",
        createdAt: date(1),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Plates",
        quantity: 100,
        originalPrice: 30,
        sellingPrice: 10,
        dateOfPurchase: date(10),
        store: "609bbd1616e3b10aa8aec7d4",
        createdAt: date(10),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Broom",
        quantity: 100,
        originalPrice: 100,
        sellingPrice: 150,
        dateOfPurchase: date(10),
        store: "609bbd1616e3b10aa8aec7d4",
        createdAt: date(10),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Spagetti",
        quantity: 100,
        originalPrice: 200,
        sellingPrice: 250,
        dateOfPurchase: date(10),
        store: "609bbd1616e3b10aa8aec7d4",
        createdAt: date(10),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Rice",
        quantity: 100,
        originalPrice: 1000,
        sellingPrice: 1500,
        dateOfPurchase: date(9),
        store: "609bbd1616e3b10aa8aec7d4",
        createdAt: date(9),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Beans",
        quantity: 100,
        originalPrice: 300,
        sellingPrice: 350,
        dateOfPurchase: date(10),
        store: "609bbd1616e3b10aa8aec7d4",
        createdAt: date(10),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Indomie",
        quantity: 100,
        originalPrice: 300,
        sellingPrice: 350,
        dateOfPurchase: date(11),
        store: "609bbd1616e3b10aa8aec7d4",
        createdAt: date(11),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Television",
        quantity: 100,
        originalPrice: 30000,
        sellingPrice: 35000,
        dateOfPurchase: date(11),
        store: "609bbd1616e3b10aa8aec7d4",
        createdAt: date(11),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Boom Box",
        quantity: 100,
        originalPrice: 300,
        sellingPrice: 350,
        dateOfPurchase: date(10),
        store: "609bbd1616e3b10aa8aec7d4",
        createdAt: date(10),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Bed frame",
        quantity: 100,
        originalPrice: 3000,
        sellingPrice: 3500,
        dateOfPurchase: date(10),
        store: "609bbd1616e3b10aa8aec7d4",
        createdAt: date(10),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Note Book",
        quantity: 100,
        originalPrice: 300,
        sellingPrice: 350,
        dateOfPurchase: date(2),
        store: "609bbd1616e3b10aa8aec7d4",
        createdAt: date(1),
      },
      {
        _id: new mongoose.Types.ObjectId(),
        productName: "Garri",
        quantity: 100,
        originalPrice: 300,
        sellingPrice: 350,
        dateOfPurchase: date(8),
        store: "609bbd1616e3b10aa8aec7d4",
        createdAt: date(8),
      },
    ],
  },
];

// Connect to MongoDB via Mongoose
seeder.connect("mongodb://localhost:27017/kenStores", function () {
  // Load Mongoose models
  seeder.loadModels(["./models/product.js"]);
  // // Clear specified collections
  seeder.clearModels(["Product"], function (error, done) {
    if (error) {
      return console.log("error", error);
    }
    // Callback to populate DB once collections have been cleared
    seeder.populateModels(data, function (err, done) {
      if (err) {
        return console.log("seed err ========> ", err);
      }
      if (done) {
        return console.log("finished seeding");
      }
      seeder.disconnect();
    });
  });
});
